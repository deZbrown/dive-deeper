name: PlanetScale and Fly.io Deployment

on:
  push:
    branches:
      - main

env:
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ORG_NAME: m82
      DATABASE_NAME: deep-dive
      BRANCH_NAME: main
      MYSQL_ATTR_SSL_CA: /etc/ssl/certs/ca-certificates.crt

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

        # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, ctype, json, curl, tokenizer, pdo, pdo_mysql, bcmath, zip, exif, pcntl
          coverage: none

      # Run composer install to get dependencies
      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
        shell: bash

      # Create PlanetScale testing branch
      - name: Create PlanetScale testing branch
        uses: planetscale/create-branch-action@v1
        with:
          org_name: ${{ env.ORG_NAME }}
          database_name: ${{ env.DATABASE_NAME }}
          branch_name: testing
          from: ${{ env.BRANCH_NAME }}

      # Create PlanetScale new branch password
      - name: Create PlanetScale branch and password
        uses: planetscale/create-branch-password-action@v1
        with:
          org_name: ${{ env.ORG_NAME }}
          database_name: ${{ env.DATABASE_NAME }}
          branch_name: testing
          name: test-password
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
        id: create_password

      # Debug: Print all outputs from create_password step
      - name: Debug Environment Variables
        run: env
        shell: bash



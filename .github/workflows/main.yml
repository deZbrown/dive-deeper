name: PlanetScale and Fly.io Deployment

on:
  push:
    branches:
      - main

env:
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  PLANETSCALE_ORGANIZATION: ${{ secrets.PLANETSCALE_ORGANIZATION }}
  PLANETSCALE_PRODUCTION_BRANCH: ${{ secrets.PLANETSCALE_PRODUCTION_BRANCH }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, ctype, json, curl, tokenizer, pdo, pdo_mysql, bcmath, zip, exif, pcntl
          coverage: none

      # Run composer install to get dependencies
      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
        shell: bash

      # Create PlanetScale testing branch
      - name: Create PlanetScale testing branch
        uses: planetscale/create-branch-action@v1
        with:
          org_name: ${{ env.PLANETSCALE_ORGANIZATION }}
          database_name: ${{ env.DB_DATABASE }}
          branch_name: testing
          from: ${{ env.PLANETSCALE_PRODUCTION_BRANCH }}

      # Run tests
      - name: Test Run
        run: php artisan test --without-tty tests/Feature | tee test_results
        shell: bash

      # Delete development branch after tests
      - name: Delete development branch
        run: pscale branch delete ${{ env.DB_DATABASE }} testing

      # Run PlanetScale migrations
      - name: Run PlanetScale Migrations
        run: php artisan pscale:migrate
        shell: bash

      # Set up Fly.io CLI
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      # Deploy to Fly.io
      - name: Deploy to fly.io
        run: flyctl deploy
